name: chatops-deploy

on: issue_comment

jobs:
  trigger:
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Check for Command
        id: command
        uses: xt0rted/slash-command-action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: test
          reaction-type: "rocket"

      - name: Act on the command
        run: echo "The command was '${{ steps.command.outputs.command-name }}' with arguments '${{ steps.command.outputs.command-arguments }}'"

  deploy:
    runs-on: ubuntu-latest
    needs: trigger
    env:
      APPLICATION: clientfrontendv2
      AWS_DEFAULT_REGION: eu-west-1
      BUILD_FOLDER: build
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '12.13'

      - name: Set env
        run: |
            echo "AWS_S3_BUCKET=lmaas-clientfrontend-gideon-dev-890530445547-eu-west-1" >> $GITHUB_ENV
            echo "REACT_APP_API=https://api.defiterm-dev.net" >> $GITHUB_ENV
            echo "REACT_APP_ASSETS=https://assets.defiterm-dev.net" >> $GITHUB_ENV
            echo "REACT_APP_RINKEBYTESTNET=https://ethereumnode.defiterm-dev.net" >> $GITHUB_ENV
            echo "REACT_APP_ETHMAINNET=https://ethereumnode.defiterm.io" >> $GITHUB_ENV
            echo "REACT_APP_MATICTESTNET=https://rpc-mumbai.maticvigil.com" >> $GITHUB_ENV
            echo "REACT_APP_MATICMAINNET=https://rpc-mainnet.maticvigil.com" >> $GITHUB_ENV
            echo "REACT_APP_BSCTESTNET=https://data-seed-prebsc-1-s1.binance.org:8545/" >> $GITHUB_ENV
            echo "REACT_APP_BSCMAINNET=https://bscnode.defiterm-dev.net/" >> $GITHUB_ENV
            echo "REACT_APP_AVALANCHETESTNET=https://api.avax-test.network/ext/bc/C/rpc" >> $GITHUB_ENV
            echo "REACT_APP_AVALANCHEMAINNET=https://api.avax.network/ext/bc/C/rpc" >> $GITHUB_ENV
            echo "REACT_APP_ALLOWED_NETWORKS=1,4,56,97,80001,137,43114,43113" >> $GITHUB_ENV

      - name: Prepare .npmrc
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> .npmrc

      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts

      - name: Build
        run: yarn build

      - name: Configure AWS CREDENTIALS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          SOURCE_DIR: ${{ env.BUILD_FOLDER }}
