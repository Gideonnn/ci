name: ci

on:
  pull_request:
    branches:
      - develop
      - main

env:
  CI: true
  NPM_REGISTRY: npm.pkg.github.com

jobs:
  version:
    name: version check
    runs-on: ubuntu-18.04
    if: ${{ github.base_ref == 'main' }}
    steps:
      - uses: actions/checkout@main

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get local version
        id: local_version
        run: echo ::set-output name=value::$(cat ./package.json | jq --raw-output .version)

      - name: Authenticate GPR
        run: echo "//${{ env.NPM_REGISTRY }}/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> .npmrc

      - name: Get registry version
        id: registry_version
        run: echo ::set-output name=value::$(npm view ${{ github.repository }} version)

      - name: Validate version
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const local_version = '${{ steps.local_version.outputs.value }}';
            const registry_version = '${{ steps.registry_version.outputs.value }}';
            core.info(`Repository version: ${local_version}`);
            core.info(`Registry version: ${registry_version}`);
            if (registry_version === local_version) {
              core.setFailed('Please bump version before merging');
            }

  install:
    name: install
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@main

      - uses: actions/cache@v1
        with:
          path: node_modules
          key: build-cache-${{ hashFiles('**/package-lock.json') }}

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Prepare .npmrc
        run: echo "//${{ env.NPM_REGISTRY }}/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> .npmrc

      - name: Install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts

  lint:
    runs-on: ubuntu-18.04
    needs: install
    steps:
      - uses: actions/checkout@main

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - uses: actions/cache@v1
        with:
          path: node_modules
          key: build-cache-${{ hashFiles('**/package-lock.json') }}

      # - name: Linting
      #   run: yarn lint

      # - name: Prettier
      #   run: yarn format

  test:
    runs-on: ubuntu-18.04
    needs: install
    steps:
      - uses: actions/checkout@main

      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - uses: actions/cache@v1
        with:
          path: node_modules
          key: build-cache-${{ hashFiles('**/package-lock.json') }}

      - name: Unit tests
        run: yarn test
